A) For Vscode and react-app
1) install eslint extension
2)install prettier eslint-config-prettier eslint-plugin-prettier
3)craete .eslintrc file.
4)go to .eslint file and write rules like:
   {
      "extends":["react-app","prettier"],
      "rules":{
         "prettier/prettier":"error"
      },
      "plugins":["prettier"]
   }
   that's it. :)

5) My user setting for vscode and react-app
   {
    "window.zoomLevel": 1,
    "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
    "workbench.sideBar.location": "left",
    "workbench.statusBar.visible": true,
    "workbench.colorTheme": "Cobalt2",
    "editor.fontFamily": "'Fira Code',monospace",
    "editor.fontLigatures": true,
    //eslint and prettier setup
    "editor.formatOnSave": true,
    "[javascript]": {
        "editor.formatOnSave": false
    },
    "eslint.autoFixOnSave": true,
    "eslint.alwaysShowStatus": true,
    "files.autoSave": "off",
    "editor.rulers": [
        80
    ],
    "terminal.integrated.fontSize": 16,
    "editor.smoothScrolling": true,
    "editor.fontSize": 14,
    "editor.lineHeight": 30,
    "editor.letterSpacing": 0.5,
    "files.trimTrailingWhitespace": true,
    "editor.fontWeight": "400",
    "editor.cursorStyle": "line",
    "editor.cursorBlinking": "expand",
    "editor.renderWhitespace": "all"
}

B) setting for node-app
-"editor.formatOnSave": true,
    "[javascript]": {
        "editor.formatOnSave":true
    },
1)install eslint globally
2)run eslint --init (this will create the .eslintrc.js file)
3)go to .eslintrc.js file and set rules like:
   module.exports = {
    "env": {
        "es6": true,
        "node": true,
        "browser": true,
    },
    "extends": "eslint:recommended",
    "parserOptions": {
        "sourceType": "module"
    },
    "rules": {
        "indent": [
            "error",
            4
        ],
        "linebreak-style": [
            "error",
            "windows"
        ],
        "quotes": [
            "error",
            "single"
        ],
        "semi": [
            "error",
            "always"
        ],
        "semi-spacing": ["error", {
            "before": false,
            "after": true
        }],
        "comma - spacing": ["error", {
            "before": false,
            "after": true
        }],
        "no-console": "off",
    }
};
